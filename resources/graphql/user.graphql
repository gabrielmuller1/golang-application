type UsersOneOut {
    id: ID!
    email: String!
}

type UsersQuery {
    one(email: String!): UsersOneOut! @hasUsersPermission(permission: READ)
}

type UsersMutation {
    createUser(email: String!, password: String!): UsersCreateOut! @hasUsersPermission(permission: WRITE)
}

type UsersCreateOut {
    status: UsersCreateOutStatus!
    id: ID!
    email: String!
}

enum UsersCreateOutStatus {
    OK
    BAD_REQUEST
    SERVER_INTERNAL_ERROR
}

directive @hasUsersPermission(permission: UsersPermissionEnum!) on FIELD_DEFINITION

enum UsersPermissionEnum {
    READ
    WRITE
}
